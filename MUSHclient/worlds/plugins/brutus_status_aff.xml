<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Ã¨tvrtek, duben 16, 2015, 11:18 odp. -->
<!-- MuClient version 4.73 -->

<!-- Plugin "brutus_group_window" generated by Plugin Wizard -->

<muclient>
<plugin
   name="brutus_status_aff"
   author="huan"
   id="cc3e0137c6159402a646d955"
   language="Lua"
   purpose="display affects into status window"
   save_state="y"
   date_written="2015-04-16 23:17:32"
   requires="4.73"
   version="1.0"
   >

</plugin>

<include name="constants.lua"/>

<triggers>

  <!-- color some affects if they are about to run out -->
  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^SPL: \(\s*1hrs\) (group sanctuary|sanctuary|power sanctuary)\s+SANCT$"
   regexp="y"
   omit_from_output="n"
   sequence="0"
   custom_colour="1"
  />
  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^SPL: \(\s*1hrs\).*\s+DET-INVIS$"
   regexp="y"
   omit_from_output="n"
   sequence="0"
   custom_colour="1"
  />
  <trigger
   enabled="y"
   keep_evaluating="y"
   match="=================================== Affect's ==================================="
   omit_from_output="n"
   sequence="0"
   script="aff_info"
   />
</triggers>


<script><![CDATA[

require "wait"
require "tprint"
require "serialize"

local AFF_LIST_PRIORITY = 2
local AFF_WATCHLIST = {
   ["sanctuary"] = 1,
   ["group sanctuary"] = 1,
   ["powersanctuary"] = 1,
   ["group life protect"] = 1,
   ["eye for an eye"] = 1,
   ["DET-INVIS"] = 1,
}

local AFF_SPELL_RX  = rex.new("^(?:SPL|SKL): \\(\\s*\\d+[a-z]+\\) ([a-z ]*).*")
local AFF_AFFECT_RX = rex.new("^(?:SPL|SKL): \\(\\s*\\d+[a-z]+\\) [a-z ]*([A-Z-]+)\s*$")

function aff_info(name, wildcard, output)
  local afflist = {}
  wait.make (function()

    while true do
      local line, wildcards, styles = wait.match ("*", nil, trigger_flag.KeepEvaluating)

      if string.match (line, "^================================================================================$") then
        break;
      end
      local dummy, dummy2, match = AFF_SPELL_RX:match(line)
      if match ~= nil and AFF_WATCHLIST[rtrim(match[1])] == 1 then
        table.insert (afflist, styles)
      else
        dummy, dummy2, match = AFF_AFFECT_RX:match(line)
        if match ~= nil and AFF_WATCHLIST[rtrim(match[1])] == 1 then
          table.insert (afflist, styles)
        end
      end
    end

    CallPlugin('b3a9c0bdeef9394ff401358a', 'update_item', 'afflist', serialize.save_simple({
      ["priority"] = AFF_LIST_PRIORITY,
      ["lines"] = afflist
    }));
    return
  end)
end

-- remove trailing whitespace from string.
-- http://en.wikipedia.org/wiki/Trim_(8programming)
function rtrim(s)
  local n = #s
  while n > 0 and s:find("^%s", n) do n = n - 1 end
  return s:sub(1, n)
end

]]></script>
</muclient>
<!-- vim: sw=3 et ts=3 syntax=lua -->
